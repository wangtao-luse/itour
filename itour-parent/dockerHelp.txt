项目模块容器Docker命令
docker [options] IMAGE [COMMAND]
-d:创建一个守护式容器在后台一直运行
-i:表示运行容器;
-t:表示容器启动后会进入命令行,加上这个参数后，容器创建就能登录进去，即分配了一个伪终端.
--name:指定容器名字,后续可以通过名字进行容器管理
-p:端口映射
-v:给容器挂载存储卷，挂载到容器的某个目录 宿主机目录：容器目录 (将宿主机的目录挂载到容器中)
   (将主机目录与容器目录之间进行共享)
--restart=always:重启docker时，自动启动相关容器
--privileged=true 容器内部对挂载的目录拥有读写等特权
1.itour-eureka-server
  docker run -d --name itour-eureka-server -p 9090:9090 ben/itour-eureka-server --restart=always

2.itour-account-service
  docker run -d --name itour-account-service -p 9092:9092 ben/itour-account-service  --restart=always

3.itour-travel-service
  docker run -d --name itour-travel-service -p 9082:9082 ben/itour-travel-service  --restart=always

4.itour-dictionary-service
docker run -d --name itour-dictionary-service -p 9099:9099  ben/itour-dictionary-service  --restart=always

5.itour-work-service
docker run -d --name itour-work-service -p 9083:9083 ben/itour-work-service --restart=always

6.itour-member-service
docker run -d --name itour-member-service -p 9098:9098  ben/itour-member-service --restart=always

7.itour-quartz-service
docker run -d --name itour-quartz-service -p 9081:9081  ben/itour-quartz-service --restart=always

8.itour-online-manager-web
docker run -d --name itour-online-manager-web -p 9095:9095  ben/itour-online-manager-web --restart=always

9.itour-online-web
docker run -d --name itour-online-web -p 9093:9093 -v /itour/img/code:/itour/img/code ben/itour-online-web --restart=always 

Portainer
docker run -d -p 9000:9000 --restart=always -v /var/run/docker.sock:/var/run/docker.sock --name ben-portainer portainer/portainer
docker run -d -p 9000:9000 --restart=always -v /mnt/portainer/run/docker.sock:/var/run/docker.sock --name ben-portainer portainer/portainer
MYSQL
docker run  -d  --restart=always  --name ben-dev-mysql -e MYSQL_ROOT_PASSWORD=root -p 3308:3306 -v /var/dev/mysqldata:/var/lib/mysql -v /var/dev/mysql/conf:/etc/mysql/conf.d  mysql --lower-case-table-names=1
docker run  -d  --restart=always  --name ben-test-mysql -e MYSQL_ROOT_PASSWORD=mysql@958958 -p 3307:3306 -v /var/test/mysqldata:/var/lib/mysql -v /var/test/mysql/conf:/etc/mysql/conf.d  mysql --lower-case-table-names=1
docker run  -d  --restart=always  --name ben-pro-mysql -e MYSQL_ROOT_PASSWORD=mysql@958958 -p 3306:3306 -v /var/pro/mysqldata:/var/lib/mysql  -v /var/pro/mysql/conf:/etc/mysql/conf.d  mysql  --lower-case-table-names=1

Redis 
docker run -itd --restart=always --name ben-pro-redis -p 6379:6379 -v /var/myredis/data:/data  -v /myredis/conf/redis.conf:/usr/local/etc/redis/redis.conf redis --requirepass 'redis@958958'
docker run -itd --restart=always --name ben-test-redis -p 6380:6379 -v /var/myredis/data:/data  -v /myredis/conf/redis.conf:/usr/local/etc/redis/redis.conf redis --requirepass 'redis@958958'

Minio
单点模式
docker run -d -p 9800:9800 --name minio-service -v /mnt/data:/data  -v /mnt/config:/root/.minio  minio/minio server /data

Nginx 
Nginx  https://www.cnblogs.com/qiqiloved/p/13470064.html
1.在/mnt目录,创建挂载目录;
  mkdir -p ./nginx/{html,log,conf}
2.运行nginx
  docker run -d --name nginx -p 81:81 nginx
3.将nginx容器内部配置文件挂载到主机
  a.复制容器配置文件
   docker cp c10d0b833743:/etc/nginx/nginx.conf  ./
   docker cp c10d0b833743:/etc/nginx/conf.d/default.conf ./conf/
4.移除运行的nginx
 docker stop contrainer_id
 docker rm contrainer_id
 contrainer_id:容器ID
5.运行nginx 
docker run -d --name spro-nginx -p 80:80  -v /mnt/nginx/nginx.conf:/etc/nginx/nginx.conf -v /mnt/nginx/log:/var/log/nginx -v /mnt/nginx/html:/usr/share/nginx/html -v /mnt/nginx/conf:/etc/nginx/conf.d  --restart=always  --privileged=true nginx
添加ssl证书
docker run -d --name spro-nginx -p 80:80  -v /mnt/nginx/nginx.conf:/etc/nginx/nginx.conf -v /mnt/nginx/log:/var/log/nginx -v /mnt/nginx/html:/usr/share/nginx/html -v /mnt/nginx/conf:/etc/nginx/conf.d  -v /mnt/nginx/certificate:/etc/nginx/certificate --restart=always  --privileged=true nginx

配置文件目录：/etc/nginx
默认首页html文件目录：/usr/share/nginx/html
日志目录:/var/log/nginx

frps:
docker run -d   --restart=always  -p 8081:8081 -p 8082:8082 -p 8083:8083 -p 8084:8084 --name frp-server  -v /mnt/frp/frps.ini:/conf/frps.ini --restart=always cloverzrg/frps-docker
frpc:
docker run -d -p 8085:8085 --restart=always --name frp-client -v /root/mnt/frpc/conf:/conf cloverzrg/frpc-docker





