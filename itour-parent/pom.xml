<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.itour</groupId>
  <artifactId>itour-parent</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <packaging>pom</packaging>
  <modules>   
    <module>itour-eureka-server</module>
    <module>itour-model</module>
    <module>itour-common</module>
    <module>itour-account-persist</module>
    <module>itour-account-service</module>
    <module>itour-account-api</module>
    <module>itour-online-web</module>
    <module>itour-online-manager-web</module>
    <module>itour-demo-web</module>
    <module>itour-travel-service</module>
    <module>itour-travel-persist</module>
    <module>itour-travel-api</module>
    <module>itour-work-api</module>
    <module>itour-work-service</module>
    <module>itour-work-persist</module>    
    <module>itour-member-persist</module>
    <module>itour-member-api</module>
    <module>itour-member-service</module>
    <module>itour-dictionary-persist</module>
    <module>itour-dictionary-service</module>
    <module>itour-dictionary-api</module>
    <module>itour-quartz-service</module>
    <module>itour-quartz-api</module>
    <module>itour-quartz-persist</module>
    <module>itour-find-api</module>
    <module>itour-find-persist</module>
    <module>itour-find-service</module>
    <module>itour-follow-api</module>
    <module>itour-follow-persist</module>
    <module>itour-follow-service</module>
  </modules>
  <!-- 将当前项目作为一个springboot-starter的子模块 -->
  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>2.2.13.RELEASE</version>
  </parent>
  <properties>
  	<java.version>1.8</java.version>
  	<spring-cloud.version>Hoxton.M3</spring-cloud.version>
  	<fastjson.version>1.2.62</fastjson.version>
  	<json-lib.version>2.4</json-lib.version>
  	<ezmorph.version>1.0.6</ezmorph.version>
  	<gson.version>2.8.6</gson.version>
  	<json.version>20190722</json.version>
  	<mybatis-plus.version>3.2.0</mybatis-plus.version>
  	<oracle.version>8.0.0</oracle.version>
  	<mysql.version>8.0.18</mysql.version>
  	<mybatis-plus-generator.version>3.3.0</mybatis-plus-generator.version>
  	<beetl.version>1.2.19.RELEASE</beetl.version>
  	<pagehelper.version>5.1.11</pagehelper.version>
  	<guava.version>28.1-jre</guava.version>
  	<shiro-spring.version>1.6.0</shiro-spring.version>
  	<shiro-spring-boot-web-starter.version>1.6.0</shiro-spring-boot-web-starter.version>
  	<dom4j.version>1.6.1</dom4j.version>
  	<xstream.version>1.4.11.1</xstream.version>
  	<spring-boot-starter-redis.version>1.4.7.RELEASE</spring-boot-starter-redis.version>
  	<jackson-datatype-guava.version>1.9.2</jackson-datatype-guava.version>
  	<commons-lang3.version>3.10</commons-lang3.version>
  	<mail.version>1.4.7</mail.version>
  	<cache-api.version>1.1.1</cache-api.version>
  	<im4java.version>1.4.0</im4java.version>
  	<opencv.version>4.0.1-1.4.4</opencv.version>
  	<thumbnailator.version>0.4.11</thumbnailator.version>
  	<hutool.version>5.3.10</hutool.version>
  	<httpclient.version>4.5.12</httpclient.version>
  	<commonmark.version>0.15.0</commonmark.version>
  	<druid.version>1.1.23</druid.version>
  	<!-- 在docker运行时要用的，只是一个前缀而已，就像包名一样,可自己任意定义此名称 -->
  	<docker.image.prefix>ben</docker.image.prefix> 
  	<org.redisson.version>3.14.1</org.redisson.version>
  	<axis2.version>1.6.2</axis2.version>
  	<fastdfs-client.version>1.27.2</fastdfs-client.version>
  	<springfox.version>3.0.0</springfox.version>
  	<swagger-bootstrap-ui.version>1.9.6</swagger-bootstrap-ui.version>
  	<knife4j-spring-boot-starter.version>3.0.2</knife4j-spring-boot-starter.version>
  	<poi.version>5.0.0</poi.version>
    <itextpdf.version>5.5.13.2</itextpdf.version>
    <itext-asian.version>5.2.0</itext-asian.version>
    <minio.version>8.3.1</minio.version>
    
  </properties> 
  <dependencies>
  <!-- springboot web -->
  	<dependency>
	    <groupId>org.springframework.boot</groupId>
	    <artifactId>spring-boot-starter-web</artifactId>
	</dependency>
	<!-- springboot-boot -start -->
	<dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter</artifactId>
    </dependency>
  <!-- springboot 单元测试 -->
	<dependency>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-test</artifactId>
		<scope>test</scope>
	<!-- 	<exclusions>
			<exclusion>
				<groupId>org.junit.vintage</groupId>
				<artifactId>junit-vintage-engine</artifactId>
			</exclusion> 
		</exclusions>-->
	</dependency>
	 <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>test</scope>
    </dependency>
	<!-- eureka server--> 
	<dependency>
		<groupId>org.springframework.cloud</groupId>
		<artifactId>spring-cloud-starter-netflix-eureka-server</artifactId>
	</dependency>
	<!-- eureka client -->
	<dependency>
		<groupId>org.springframework.cloud</groupId>
		<artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
	</dependency>
	<!--zuul-->
    <dependency>
        <groupId>org.springframework.cloud</groupId>
        <artifactId>spring-cloud-starter-netflix-zuul</artifactId>
    </dependency>
    <!-- openfeign -->
    <dependency>
	    <groupId>org.springframework.cloud</groupId>
	    <artifactId>spring-cloud-starter-openfeign</artifactId>
	</dependency>
	<!-- 为解决Service抛出异常在controller可以接受到异常信息 -->
	<dependency>
	    <groupId>org.springframework.cloud</groupId>
	    <artifactId>spring-cloud-starter-netflix-hystrix</artifactId>
	</dependency>
	
        <!-- fastjson  -->
	<dependency>
	    <groupId>com.alibaba</groupId>
	    <artifactId>fastjson</artifactId>
	    <version>${fastjson.version}</version>
	</dependency> 
	 <!-- json-lib 建议不要使用此工具包转换处理问题比较多--> 
	<dependency>
	    <groupId>net.sf.json-lib</groupId>
	    <artifactId>json-lib</artifactId>
	    <version>${json-lib.version}</version>
	    <classifier>jdk15</classifier>
	</dependency>
	<!-- 
	json-lib需要此包的支持;
	如果没有引入会报错: java.lang.NoClassDefFoundError: net/sf/ezmorph/Morpher
	  
	 -->
	 <dependency>
	    <groupId>net.sf.ezmorph</groupId>
	    <artifactId>ezmorph</artifactId>
	    <version>${ezmorph.version}</version>
	</dependency>
	 <!-- gsonn -->
	 <dependency>
	    <groupId>com.google.code.gson</groupId>
	    <artifactId>gson</artifactId>
	</dependency>
	<!-- -json -->
	 <dependency>
	    <groupId>org.json</groupId>
	    <artifactId>json</artifactId>
	    <version>${json.version}</version>
	</dependency>
	 
	 <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>test</scope>
    </dependency>
	
	
    <!-- lombok 代码入侵太强  不建议在项目中使用-->
  	<dependency>
	    <groupId>org.projectlombok</groupId>
	    <artifactId>lombok</artifactId>
	    <scope>provided</scope>
	</dependency>
	
	<!-- springboot 热部署 -->
	<dependency>
	    <groupId>org.springframework.boot</groupId>
	    <artifactId>spring-boot-devtools</artifactId>
	    <scope>runtime</scope>
	</dependency>
	<!-- -数据绑定 -->
	<dependency>
	    <groupId>com.fasterxml.jackson.core</groupId>
	    <artifactId>jackson-databind</artifactId>
	</dependency>	
	<dependency>
	    <groupId>com.fasterxml.jackson</groupId>
	    <artifactId>jackson-datatype-guava</artifactId>
	    <version>${jackson-datatype-guava.version}</version>
	</dependency>
	
	<dependency>
		<!-- guava工具 -->
	    <groupId>com.google.guava</groupId>
	    <artifactId>guava</artifactId>
	    <version>${guava.version}</version>    
	</dependency>
	<dependency>
	    <groupId>org.apache.commons</groupId>
	    <artifactId>commons-lang3</artifactId>
	</dependency>
     <!-- 工具类 -->
	<dependency>
	    <groupId>cn.hutool</groupId>
	    <artifactId>hutool-all</artifactId>
	    <version>${hutool.version}</version>
	</dependency>
	
	<!-- redis缓存 -->
	<dependency>
	    <groupId>org.springframework.boot</groupId>
	    <artifactId>spring-boot-starter-redis</artifactId>
	    <version>${spring-boot-starter-redis.version}</version>
	</dependency>
	<!-- redisson 分布式高并发解决方案-->
	<dependency>
    	<groupId>org.redisson</groupId>
	    <artifactId>redisson</artifactId>
	    <version>${org.redisson.version}</version>
	</dependency>	
	<!--分页插件 pageHelper 使用了mybatispluse中的分页，引入多个分页插件导致分页失效-->
	<dependency>
	    <groupId>com.github.pagehelper</groupId>
	    <artifactId>pagehelper</artifactId>
	    <version>${pagehelper.version}</version>
	</dependency>
	<!-- MAIL -->
	<dependency>
	    <groupId>javax.mail</groupId>
	    <artifactId>mail</artifactId>
	    <version>${mail.version}</version>
	</dependency>
	<!-- swagger -->
	<dependency>
	    <groupId>io.springfox</groupId>
	    <artifactId>springfox-boot-starter</artifactId>
	    <version>${springfox.version}</version>
	</dependency>
	<!-- minio -->
	<dependency>
	    <groupId>io.minio</groupId>
	    <artifactId>minio</artifactId>
	    <version>${minio.version}</version>
	</dependency>
	
	

	
	
	
</dependencies>
  	<dependencyManagement>
		<dependencies>
		 <!-- springCloud核心包 -->
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<!-- mysql驱动包 -->
			<dependency>
			    <groupId>mysql</groupId>
			    <artifactId>mysql-connector-java</artifactId>
			    <version>${mysql.version}</version>
			</dependency>
			<!-- 数据源相关 -->
			<dependency>
			  <groupId>com.alibaba</groupId>
			  <artifactId>druid</artifactId>
			  <version>${druid.version}</version>
			</dependency>
			 <!-- mybatis plus -->
		    <dependency>
			    <groupId>com.baomidou</groupId>
			    <artifactId>mybatis-plus-boot-starter</artifactId>
			    <version>${mybatis-plus.version}</version>
			</dependency>
			<!-- mybatis plus 代码生成器 -->
			<dependency>
			    <groupId>com.baomidou</groupId>
			    <artifactId>mybatis-plus-generator</artifactId>
			    <version>${mybatis-plus-generator.version}</version>
			</dependency>
			<!-- beetl模板引擎 -->
			<dependency>
			    <groupId>com.ibeetl</groupId>
			    <artifactId>beetl-framework-starter</artifactId>
			    <version>${beetl.version}</version>
			</dependency>
			<!-- shiro相关包 -->
			<dependency>
			    <groupId>org.apache.shiro</groupId>
			    <artifactId>shiro-spring</artifactId>
			    <version>${shiro-spring.version}</version>
		    </dependency>
			<dependency>
			    <groupId>org.apache.shiro</groupId>
			    <artifactId>shiro-spring-boot-web-starter</artifactId>
			    <version>${shiro-spring-boot-web-starter.version}</version>
			</dependency>
			
			
			<!-- 缓存相关 -->
			<!-- JSR107  开发复杂性较大 -->
			<dependency>
			    <groupId>javax.cache</groupId>
			    <artifactId>cache-api</artifactId>
			    <version>${cache-api.version}</version>
			</dependency>
			
			
			<!-- 微信公众号开发 -->
			<dependency>
			    <groupId>dom4j</groupId>
			    <artifactId>dom4j</artifactId>
			    <version>${dom4j.version}</version>
			</dependency>
			<dependency>
			    <groupId>com.thoughtworks.xstream</groupId>
			    <artifactId>xstream</artifactId>
			    <version>${xstream.version}</version>
			</dependency>
			<!-- httpClient -->
			<dependency>
			    <groupId>org.apache.httpcomponents</groupId>
			    <artifactId>httpclient</artifactId>
			    <version>${httpclient.version}</version>
			</dependency>
			<dependency>
			    <groupId>org.apache.httpcomponents</groupId>
			    <artifactId>httpmime</artifactId>
			    <version>${httpclient.version}</version>
			</dependency>
			
			<!-- 图片处理 -->
			<dependency>
			    <groupId>org.im4java</groupId>
			    <artifactId>im4java</artifactId>
			    <version>${im4java.version}</version>
			</dependency>
			<dependency>
			    <groupId>org.bytedeco.javacpp-presets</groupId>
			    <artifactId>opencv</artifactId>
			    <version>${opencv.version}</version>
			</dependency>
			<dependency>
			    <groupId>net.coobird</groupId>
			    <artifactId>thumbnailator</artifactId>
			    <version>${thumbnailator.version}</version>
			</dependency>
			<!-- markdown相关 -->
			<!--引入atlassian（将markdown形式转成html格式的）-->
				<dependency>
				    <groupId>com.atlassian.commonmark</groupId>
				    <artifactId>commonmark</artifactId>
				    <version>${commonmark.version}</version>
				</dependency>
				
				<dependency>
				    <groupId>com.atlassian.commonmark</groupId>
				    <artifactId>commonmark-ext-gfm-tables</artifactId>
				    <version>${commonmark.version}</version>
				</dependency>
				
				<dependency>
				    <groupId>com.atlassian.commonmark</groupId>
				    <artifactId>commonmark-ext-heading-anchor</artifactId>
				    <version>${commonmark.version}</version>
				</dependency>
				<!-- axis2 方式实现webservice -->
				<dependency>
		            <groupId>org.apache.axis2</groupId>
		            <artifactId>axis2</artifactId>
		            <version>${axis2.version}</version>
		        </dependency>
		        <dependency>
		            <groupId>org.apache.axis2</groupId>
		            <artifactId>axis2-adb</artifactId>
		            <version>${axis2.version}</version>
		        </dependency>
		        <dependency>
		            <groupId>org.apache.axis2</groupId>
		            <artifactId>axis2-transport-http</artifactId>
		            <version>${axis2.version}</version>
		        </dependency>
		        <dependency>
		            <groupId>org.apache.axis2</groupId>
		            <artifactId>axis2-transport-local</artifactId>
		            <version>${axis2.version}</version>
		        </dependency>
		        <dependency>
		            <groupId>org.apache.axis2</groupId>
		            <artifactId>axis2-kernel</artifactId>
		            <version>${axis2.version}</version>
		        </dependency>
		        <!-- 整合FastDFS分布式文件系统 -->
		        <dependency>
				    <groupId>com.github.tobato</groupId>
				    <artifactId>fastdfs-client</artifactId>
				    <version>${fastdfs-client.version}</version>
				</dependency>
				<!-- java对Excel的操作相关 -->
				<dependency>
				    <groupId>org.apache.poi</groupId>
				    <artifactId>poi</artifactId>
				    <version>${poi.version}</version>
				</dependency>
				<dependency>
				    <groupId>org.apache.poi</groupId>
				    <artifactId>poi-ooxml</artifactId>
				    <version>${poi.version}</version>
				</dependency>
				<dependency>
				    <groupId>com.itextpdf</groupId>
				    <artifactId>itextpdf</artifactId>
				    <version>${itextpdf.version}</version>
				</dependency>
				<dependency>
				    <groupId>com.itextpdf</groupId>
				    <artifactId>itext-asian</artifactId>
				    <version>${itext-asian.version}</version>
				</dependency>
				
				
				
				
				
		</dependencies>
		
		
	</dependencyManagement>

  <repositories>
		<repository>
			<id>spring-milestones</id>
			<name>Spring Milestones</name>
			<url>https://repo.spring.io/milestone</url>
		</repository>
	</repositories>  
  <!--配置信息
     id: 不同环境Profile的唯一id;
     properties:properties下可以自定义多个字段(名字随便取，可以有多个);
     activation:用来指定激活方式，可以根据jdk环境，环境变量，文件的存在或缺失;
   -->
    <profiles>
        <!--开发环境-->
        <profile>
            <!--本地环境标识-->
            <id>dev</id>
            <activation>
                <!--默认激活：如果在不指定profile时默认是开发环境-->
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <profiles.active>dev</profiles.active>
                <server.eureka.port>9090</server.eureka.port>
                <server.zuul.port>9091</server.zuul.port>
                <server.account.port>9092</server.account.port>
                <server.online.port>9093</server.online.port>
                <server.wechat.port>9094</server.wechat.port>
                <server.online-manager.port>9095</server.online-manager.port>
                <server.demo.port>9096</server.demo.port>
                <server.follow.port>9097</server.follow.port>                
                <server.member.port>9098</server.member.port>
                <server.dictionary.port>9099</server.dictionary.port>                
                <server.quartz.port>9081</server.quartz.port>
                <server.travel.port>9082</server.travel.port>
                <server.work.port>9083</server.work.port>
                <eureka.host>127.0.0.1</eureka.host>
                <eureka.instance.prefer-ip-address>true</eureka.instance.prefer-ip-address>
                <!-- 数据库相关 -->
                <spring.datasource.url>jdbc:mysql://1.116.226.147:3307/itour?serverTimezone=UTC</spring.datasource.url>
                <spring.datasource.driverClassName>com.mysql.cj.jdbc.Driver</spring.datasource.driverClassName>
                <spring.datasource.username>root</spring.datasource.username>
                <spring.datasource.password>mysql@958958</spring.datasource.password>
                <!-- redis相关 -->
                <spring.redis.database>0</spring.redis.database>
                <spring.redis.host>1.116.226.147</spring.redis.host>
                <spring.redis.port>6380</spring.redis.port>
                <spring.redis.password>redis@958958</spring.redis.password>
                <spring.redis.timeout>30000</spring.redis.timeout>
                <spring.redis.pool.max-active>8</spring.redis.pool.max-active>
                <spring.redis.pool.max-wait>-1</spring.redis.pool.max-wait>
                <spring.redis.pool.max-idle>8</spring.redis.pool.max-idle>
                <spring.redis.pool.min-idle>0</spring.redis.pool.min-idle>
                <ribbon.ConnectTimeout>90000</ribbon.ConnectTimeout>
                <ribbon.ReadTimeout>90000</ribbon.ReadTimeout>
                <ribbon.MaxAutoRetries>0</ribbon.MaxAutoRetries>
                <ribbon.MaxAutoRetriesNextServer>0</ribbon.MaxAutoRetriesNextServer>
                <feign.client.config.default.connect-timeout>90000</feign.client.config.default.connect-timeout>
                <feign.client.config.default.read-timeout>90000</feign.client.config.default.read-timeout>
                <!-- 日志 trace < debug < info < warn < error < fatal 默认级别为info，即默认打印info及其以上级别的日志-->
                <!--日志存放位置-->
                <log.home>D:/dev/logs/questions</log.home>
                <!-- 图片滑动验证码 图片路径 -->
                <prefix.verificationImagePathPrefix>D:\\temp\\imgs\\</prefix.verificationImagePathPrefix>
                 <!-- wechat第三方接口相关参数配置 -->
                 <wechat.api.requestUrl>https://api.weixin.qq.com</wechat.api.requestUrl>
                 <wechat.api.appid>wxf4c100beea39b4db</wechat.api.appid>
                 <wechat.api.appsecret>acf77040a595c51646f87b1a2308e775</wechat.api.appsecret>
                <!-- 百度AI第三方接口相关参数配置 -->
                <baidu.api.requestUrl>https://aip.baidubce.com</baidu.api.requestUrl>
                <baidu.api.client_id>S3EKgVjpcmwBBQInE6VMTrHo</baidu.api.client_id>
                <baidu.api.client_secret>qKtWQ4x1YEPlxtMf97BbSQV3uGb8d085</baidu.api.client_secret>
                <!-- 文件上传相关 -->
                <fileupload.path>D:\\temp\\upload\\</fileupload.path>
                <!-- docker 相关-->
                <docker.dockerHost>http://127.0.0.1:2375</docker.dockerHost>
                <docker.maintainer>wangtao wwangtaoc11@163.com</docker.maintainer>
                <docker.imageTag>latest</docker.imageTag>
                <docker.cmd>["java","-version"]</docker.cmd>
                <docker.entryPoint>["java","-jar","${project.build.finalName}.jar"]</docker.entryPoint>
                <!-- minio相关 -->
                <minio.endpoint>http://1.116.226.147:9800</minio.endpoint>
                <minio.accessKey>admin</minio.accessKey>
                <minio.secretKey>[pwd@888]</minio.secretKey>
            </properties>
        </profile>
        <!--测试环境--> 
        <profile>
            <id>test</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <properties>
                <profiles.active>test</profiles.active>
                <server.eureka.port>9090</server.eureka.port>
                <server.zuul.port>9091</server.zuul.port>
                <server.account.port>9092</server.account.port>
                <server.online.port>9093</server.online.port>
                <server.wechat.port>9094</server.wechat.port>
                <server.online-manager.port>9095</server.online-manager.port>
                <server.demo.port>9096</server.demo.port> 
                <server.follow.port>9097</server.follow.port>               
                <server.member.port>9098</server.member.port>
                <server.dictionary.port>9099</server.dictionary.port>                
                <server.quartz.port>9081</server.quartz.port>
                <server.travel.port>9082</server.travel.port>
                <server.work.port>9083</server.work.port>
                <eureka.host>106.54.162.159</eureka.host>
                <eureka.instance.prefer-ip-address>true</eureka.instance.prefer-ip-address>
                <!-- 数据库相关 -->
                <spring.datasource.url>jdbc:mysql://1.116.226.147:3307/itour?serverTimezone=UTC</spring.datasource.url>
                <spring.datasource.driverClassName>com.mysql.cj.jdbc.Driver</spring.datasource.driverClassName>
                <spring.datasource.username>root</spring.datasource.username>
                <spring.datasource.password>root</spring.datasource.password>
                 <!-- redis相关 -->
                <spring.redis.database>1</spring.redis.database>
                <spring.redis.host>1.116.226.147</spring.redis.host>
                <spring.redis.port>6380</spring.redis.port>
                <spring.redis.password>redis@958958</spring.redis.password>
                <spring.redis.timeout>30000</spring.redis.timeout>
                <spring.redis.pool.max-active>8</spring.redis.pool.max-active>
                <spring.redis.pool.max-wait>-1</spring.redis.pool.max-wait>
                <spring.redis.pool.max-idle>8</spring.redis.pool.max-idle>
                <spring.redis.pool.min-idle>0</spring.redis.pool.min-idle>
                <!-- ribbon相关 -->
                <ribbon.ConnectTimeout>90000</ribbon.ConnectTimeout>
                <ribbon.ReadTimeout>90000</ribbon.ReadTimeout>
                <ribbon.MaxAutoRetries>0</ribbon.MaxAutoRetries>
                <ribbon.MaxAutoRetriesNextServer>0</ribbon.MaxAutoRetriesNextServer>
                <feign.client.config.default.connect-timeout>90000</feign.client.config.default.connect-timeout>
                <feign.client.config.default.read-timeout>90000</feign.client.config.default.read-timeout>
                <!-- 日志 trace < debug < info < warn < error < fatal 默认级别为info，即默认打印info及其以上级别的日志-->
                <log.home>/root/test/logs/questions</log.home>
                <!-- 图片滑动验证码 图片路径-->
               <prefix.verificationImagePathPrefix>/root/img/code</prefix.verificationImagePathPrefix>
                <!-- wechat第三方接口相关参数配置 -->
                 <wechat.api.requestUrl>https://api.weixin.qq.com</wechat.api.requestUrl>
                 <wechat.api.appid>wxf4c100beea39b4db</wechat.api.appid>
                 <wechat.api.appsecret>acf77040a595c51646f87b1a2308e775</wechat.api.appsecret>
                <!-- 百度AI第三方接口相关参数配置 -->
                <baidu.api.requestUrl>https://aip.baidubce.com</baidu.api.requestUrl>
                <baidu.api.client_id>S3EKgVjpcmwBBQInE6VMTrHo</baidu.api.client_id>
                <baidu.api.client_secret>qKtWQ4x1YEPlxtMf97BbSQV3uGb8d085</baidu.api.client_secret>
                 <!-- 文件上传相关 -->
                <fileupload.path>/root/test/itour/upload\\</fileupload.path>
                 <!-- docker 相关-->
                <docker.dockerHost>http://192.168.1.88:2375</docker.dockerHost>
                <docker.maintainer>wangtao wwangtaoc11@163.com</docker.maintainer>
                <docker.imageTag>latest</docker.imageTag>
                <docker.cmd>["java","-version"]</docker.cmd>
                <docker.entryPoint>["java","-jar","${project.build.finalName}.jar"]</docker.entryPoint>
                <!-- minio相关 -->
                <minio.endpoint>http://1.116.226.147:9800</minio.endpoint>
                <minio.accessKey>admin</minio.accessKey>
                <minio.secretKey>[pwd@888]</minio.secretKey>
            </properties>
        </profile>
         <!--模拟生产环境-->
        <profile>
            <id>spro</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <properties>
                <profiles.active>spro</profiles.active>
                <server.eureka.port>9090</server.eureka.port>
                <server.zuul.port>9091</server.zuul.port>
                <server.account.port>9092</server.account.port>
                <server.online.port>9093</server.online.port>
                <server.wechat.port>9094</server.wechat.port>
                <server.online-manager.port>9095</server.online-manager.port>
                <server.demo.port>9096</server.demo.port>                
                <server.member.port>9098</server.member.port>
                <server.dictionary.port>9099</server.dictionary.port>                
                <server.quartz.port>9081</server.quartz.port>
                <server.travel.port>9082</server.travel.port>
                <server.work.port>9083</server.work.port>
                <eureka.host>192.168.1.88</eureka.host>
                <eureka.instance.prefer-ip-address>true</eureka.instance.prefer-ip-address>
                <!-- 数据库相关 -->
                <spring.datasource.url>jdbc:mysql://192.168.1.88:3308/itour?serverTimezone=UTC</spring.datasource.url>
                <spring.datasource.driverClassName>com.mysql.cj.jdbc.Driver</spring.datasource.driverClassName>
                <spring.datasource.username>root</spring.datasource.username>
                <spring.datasource.password>root</spring.datasource.password>
                 <!-- redis相关 -->
                <spring.redis.database>2</spring.redis.database>
                <spring.redis.host>192.168.1.88</spring.redis.host>
                <spring.redis.port>6379</spring.redis.port>
                <spring.redis.password>redis@958958</spring.redis.password>
                <spring.redis.timeout>30000</spring.redis.timeout>
                <spring.redis.pool.max-active>8</spring.redis.pool.max-active>
                <spring.redis.pool.max-wait>-1</spring.redis.pool.max-wait>
                <spring.redis.pool.max-idle>8</spring.redis.pool.max-idle>
                <spring.redis.pool.min-idle>0</spring.redis.pool.min-idle>
                 <!-- ribbon相关 -->
                <ribbon.ConnectTimeout>90000</ribbon.ConnectTimeout>
                <ribbon.ReadTimeout>90000</ribbon.ReadTimeout>
                <ribbon.MaxAutoRetries>0</ribbon.MaxAutoRetries>
                <ribbon.MaxAutoRetriesNextServer>0</ribbon.MaxAutoRetriesNextServer>
                <feign.client.config.default.connect-timeout>90000</feign.client.config.default.connect-timeout>
                <feign.client.config.default.read-timeout>90000</feign.client.config.default.read-timeout>
                <!-- 日志 trace < debug < info < warn < error < fatal 默认级别为info，即默认打印info及其以上级别的日志-->
                <log.home>/root/spro/logs/questions</log.home>
                <!-- 图片滑动验证码 图片路径-->
               <prefix.verificationImagePathPrefix>/root/spro/itour/imgs/</prefix.verificationImagePathPrefix>
                <!-- wechat第三方接口相关参数配置 -->
                 <wechat.api.requestUrl>https://api.weixin.qq.com</wechat.api.requestUrl>
                 <wechat.api.appid>wxf4c100beea39b4db</wechat.api.appid>
                 <wechat.api.appsecret>acf77040a595c51646f87b1a2308e775</wechat.api.appsecret>
                <!-- 百度AI第三方接口相关参数配置 -->
                <baidu.api.requestUrl>https://aip.baidubce.com</baidu.api.requestUrl>
                <baidu.api.client_id>S3EKgVjpcmwBBQInE6VMTrHo</baidu.api.client_id>
                <baidu.api.client_secret>qKtWQ4x1YEPlxtMf97BbSQV3uGb8d085</baidu.api.client_secret>
                 <!-- 文件上传相关 -->             
                <fileupload.path>/root/spro/itour/upload/</fileupload.path>
                 <!-- docker 相关-->
                <docker.dockerHost>http://192.168.1.88:2375</docker.dockerHost>
                <docker.maintainer>wangtao wwangtaoc11@163.com</docker.maintainer>
                <docker.imageTag>latest</docker.imageTag>
                <docker.cmd>["java","-version"]</docker.cmd>
                <docker.entryPoint>["java","-jar","${project.build.finalName}.jar"]</docker.entryPoint>
                 <!-- minio相关 -->
                <minio.endpoint>http://192.168.1.88:9800</minio.endpoint>
                <minio.accessKey>admin</minio.accessKey>
                <minio.secretKey>[pwd@888]</minio.secretKey>
            </properties>
        </profile>
        <!--生产环境 --> 
        <profile>
            <id>pro</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <properties>
                <profiles.active>pro</profiles.active>
                <server.eureka.port>9090</server.eureka.port>
                <server.zuul.port>9091</server.zuul.port>
                <server.account.port>9092</server.account.port>
                <server.online.port>9093</server.online.port>
                <server.wechat.port>9094</server.wechat.port>
                <server.online-manager.port>9095</server.online-manager.port>
                <server.demo.port>9096</server.demo.port> 
                <server.follow.port>9097</server.follow.port>               
                <server.member.port>9098</server.member.port>
                <server.dictionary.port>9099</server.dictionary.port>                
                <server.quartz.port>9081</server.quartz.port>
                <server.travel.port>9082</server.travel.port>
                <server.work.port>9083</server.work.port>
                <eureka.host>1.116.226.147</eureka.host>
                <eureka.instance.prefer-ip-address>true</eureka.instance.prefer-ip-address>
                <!-- 数据库相关 -->
                <spring.datasource.url>jdbc:mysql://106.54.162.159:3306/itour?serverTimezone=UTC</spring.datasource.url>
                <spring.datasource.driverClassName>com.mysql.cj.jdbc.Driver</spring.datasource.driverClassName>
                <spring.datasource.username>root</spring.datasource.username>
                <spring.datasource.password>mysql@958958</spring.datasource.password>
                 <!-- redis相关 -->
                <spring.redis.database>3</spring.redis.database>
                <spring.redis.host>106.54.162.159</spring.redis.host>
                <spring.redis.port>6379</spring.redis.port>
                <spring.redis.password>redis@958958</spring.redis.password>
                <spring.redis.timeout>30000</spring.redis.timeout>
                <spring.redis.pool.max-active>8</spring.redis.pool.max-active>
                <spring.redis.pool.max-wait>-1</spring.redis.pool.max-wait>
                <spring.redis.pool.max-idle>8</spring.redis.pool.max-idle>
                <spring.redis.pool.min-idle>0</spring.redis.pool.min-idle>
                <ribbon.ConnectTimeout>90000</ribbon.ConnectTimeout>
                <ribbon.ReadTimeout>90000</ribbon.ReadTimeout>
                <ribbon.MaxAutoRetries>0</ribbon.MaxAutoRetries>
                <ribbon.MaxAutoRetriesNextServer>0</ribbon.MaxAutoRetriesNextServer>
                <feign.client.config.default.connect-timeout>90000</feign.client.config.default.connect-timeout>
                <feign.client.config.default.read-timeout>90000</feign.client.config.default.read-timeout>
                <!-- 日志 trace < debug < info < warn < error < fatal 默认级别为info，即默认打印info及其以上级别的日志-->
                <log.home>/root/pro/logs/questions</log.home>
                <!-- 图片滑动验证码 图片路径-->
               <prefix.verificationImagePathPrefix>/root/pro/itour/imgs/</prefix.verificationImagePathPrefix>
                <!-- wechat第三方接口相关参数配置 -->
                 <wechat.api.requestUrl>https://api.weixin.qq.com</wechat.api.requestUrl>
                 <wechat.api.appid>wxf4c100beea39b4db</wechat.api.appid>
                 <wechat.api.appsecret>acf77040a595c51646f87b1a2308e775</wechat.api.appsecret>
                <!-- 百度AI第三方接口相关参数配置 -->
                <baidu.api.requestUrl>https://aip.baidubce.com</baidu.api.requestUrl>
                <baidu.api.client_id>S3EKgVjpcmwBBQInE6VMTrHo</baidu.api.client_id>
                <baidu.api.client_secret>qKtWQ4x1YEPlxtMf97BbSQV3uGb8d085</baidu.api.client_secret>
                 <!-- 文件上传相关 -->
                <fileupload.path>/root/pro/itour/upload/</fileupload.path>
                 <!-- docker 相关-->
                <docker.dockerHost>http://192.168.1.88:2375</docker.dockerHost>
                <docker.maintainer>wangtao wwangtaoc11@163.com</docker.maintainer>
                <docker.imageTag>latest</docker.imageTag>
                <docker.cmd>["java","-version"]</docker.cmd>
                <!-- -Xms64m  -Xmx128m  -Xmn32m  -Xss256k  -XX:SurvivorRatio=8  -XX:+UseConcMarkSweepGC -->
                <docker.entryPoint>["java","-XX:MetaspaceSize=128m","-XX:MaxMetaspaceSize=56m","-Xms64m","-Xmx128m","-Xmn32m","-Xss256k","-XX:SurvivorRatio=8","-XX:+UseConcMarkSweepGC","-jar","${project.build.finalName}.jar"]</docker.entryPoint>
                 <!-- minio相关 -->
                <minio.endpoint>http://1.116.226.147:9800</minio.endpoint>
                <minio.accessKey>admin</minio.accessKey>
                <minio.secretKey>[pwd@988]</minio.secretKey>
            </properties>
        </profile>
    </profiles>
    <name>HikariCP</name>
   
</project>