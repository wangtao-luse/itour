<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.itour.persist.WorkInfoMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.itour.model.work.WorkInfo">
        <id column="ID" property="id" />
        <result column="TITLE" property="title" />
        <result column="URL" property="url" />
        <result column="SUMMARY" property="summary" />
        <result column="ARTICLE_TYPE" property="articleType" />
        <result column="PUBLISHTIME" property="publishtime" />
        <result column="UPDATETIME" property="updatetime" />
        <result column="MODALITY" property="modality" />
        <result column="UID" property="uid" />
        <result column="READ_COUNT" property="readCount" />
        <result column="COMMENT_COUNT" property="commentCount" />
        <result column="LIKE_COUNT" property="likeCount" />
        <result column="PV" property="pv" />
        <result column="STATUS" property="status" />
    </resultMap>
    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        ID, TITLE, URL, SUMMARY, ARTICLE_TYPE, PUBLISHTIME, UPDATETIME, MODALITY, UID, READ_COUNT, COMMENT_COUNT, LIKE_COUNT, PV, STATUS
    </sql>
     <select id="selectWorkInfoList" parameterType="com.itour.model.work.dto.WorkInfoDto" resultType="com.itour.model.work.dto.WorkInfoDto">
	     <choose>
	         <when test="vo.loginUid==null or ''==vo.loginUid">
	         SELECT 
	           c.*,a.NICKNAME,a.AVATAR 
	         FROM t_w_work_info c, T_A_OAUTH a 
	         WHERE a.OAUTH_TYPE='email' AND a.U_ID=c.UID AND c.`STATUS` ='30'
	         order by c.PUBLISHTIME DESC
	         </when>
	         <otherwise>
	           SELECT t1.*,t2.NICKNAME,t2.AVATAR,IFNULL(t3.STATUS,'0') likeStatus,t3.UID likeUid
				FROM
					t_w_work_info t1 INNER JOIN
					T_A_OAUTH t2 
				ON t1.UID= t2.U_ID AND t2.OAUTH_TYPE='email' and t1.`STATUS` ='30'
				LEFT JOIN 
				 t_w_like t3 ON t1.ID=t3.TID and t3.uid=#{vo.loginUid}  order by t1.PUBLISHTIME DESC
	         </otherwise>
	    </choose>
     </select>
     
     <select id="selectWorkInfo" parameterType="com.itour.model.work.dto.WorkInfoDto" resultType="com.itour.model.work.dto.WorkInfoDto">
    
    <choose>
      <when test="vo.loginUid==null or ''==vo.loginUid" >
      	SELECT t1.*,t2.NICKNAME,t2.AVATAR
	FROM
		t_w_work_info t1 INNER JOIN
		T_A_OAUTH t2 
	ON t1.UID= t2.U_ID AND t2.OAUTH_TYPE='email' and t1.STATUS='30' AND t1.ID=#{vo.id}
      </when>
      <otherwise>
      SELECT t1.*,t2.NICKNAME,t2.AVATAR,IFNULL(t3.`STATUS`,'0') likeStatus,t3.UID likeUid
	FROM
		t_w_work_info t1 INNER JOIN
		T_A_OAUTH t2 
	ON t1.UID= t2.U_ID AND t2.OAUTH_TYPE='email' and t1.STATUS='30' AND t1.ID=#{vo.id}
	LEFT JOIN 
	 t_w_like t3 ON t1.ID=t3.TID and t3.uid=#{vo.loginUid} 
      </otherwise>
    </choose>
    
    </select>
    
        <select id="searchTextList" parameterType="com.itour.model.work.dto.WorkInfoDto" resultType="com.itour.model.work.dto.WorkInfoDto">
      SELECT t1.*,t2.NICKNAME,1 mold FROM t_w_work_info t1  
        INNER JOIN t_a_oauth t2 on t1.UID = t2.U_ID and t2.OAUTH_TYPE='email'
		and (t1.TITLE like "%"#{vo.title}"%" or t1.SUMMARY LIKE "%"#{vo.title}"%")
		<if test="vo.type!=null and '' !=vo.type">
		  and t1.type=#{vo.type}
		</if>
      
    </select>
     <select id="getInfoData" parameterType="com.itour.model.work.dto.WorkInfoDto" resultType="com.itour.model.work.dto.WorkInfoDto">
    SELECT t1.infoCount,t2.draffCount FROM(
    	SELECT UID,STATUS,count(*) infoCount FROM t_w_work_info c  GROUP BY UID,STATUS HAVING  c.UID=#{vo.uid} and c.`STATUS`='30')t1 
    	INNER JOIN (
    	SELECT UID,STATUS,count(*) draffCount FROM t_w_work_info c  GROUP BY UID,STATUS HAVING  c.UID=#{vo.uid} and c.`STATUS`='10') t2
		ON t1.UID=t2.UID
    </select>
    <select id="selectDynamicList" parameterType="com.itour.model.work.dto.WorkInfoDto" resultType="com.itour.model.work.dto.WorkInfoDto">
           <if test='vo.mold=="1"'>
            SELECT * FROM(
	            SELECT * FROM (
		            SELECT t1.*,t1.PUBLISHTIME time,t2.NICKNAME,t2.AVATAR, 1 mold,1 dynamic,IFNULL(t3.`STATUS`,'0') likeStatus,t3.UID likeUid
				   FROM t_w_work_info t1 INNER JOIN t_a_oauth t2 on t1.UID = t2.U_ID
						and t1.UID=#{vo.uid} and t1.`STATUS`='30' and t2.OAUTH_ID=#{vo.oauthId}
						LEFT JOIN t_w_like t3 ON t1.ID= t3.TID and t3.UID=#{vo.loginUid}
				) c1
				  UNION ALL				
				SELECT * FROM (
					SELECT t1.*,t2.CREATEDATE time,t3.NICKNAME,t3.AVATAR, 1 mold,2 dynamic,IFNULL(t4.`STATUS`,'0') likeStatus,t4.UID likeUid
					FROM t_w_work_info t1 INNER JOIN t_w_like t2 ON t1.ID = t2.TID 
						and t1.`STATUS`='30' and  t2.UID=#{vo.uid} and t2.STATUS='1'
					INNER JOIN t_a_oauth t3 on t1.UID =t3.U_ID 
						and t3.OAUTH_TYPE='email'
					LEFT JOIN t_w_like t4 ON t1.ID= t4.TID and t4.UID=#{vo.loginUid}
				) c2				
			)c3 ORDER BY time DESC
		  </if>
		  <if test='vo.mold =="2"'>
		   SELECT t1.*,t1.PUBLISHTIME time,t2.NICKNAME,t2.AVATAR, 2 mold,IFNULL(t3.`STATUS`,'0') likeStatus,t3.UID likeUid
		   FROM t_w_work_info t1 INNER JOIN t_a_oauth t2 on t1.UID = t2.U_ID
				and t1.UID=#{vo.uid} and t1.`STATUS`='30' and t2.OAUTH_ID=#{vo.oauthId}
				LEFT JOIN t_w_like t3 ON t1.ID= t3.TID and t3.UID=#{vo.loginUid}
				<foreach collection="vo.orderbyList" item="item" separator="," index="index">
				 <if test="index==0">
				  order by
				 </if>
				  ${item.sortType}
				 <if test='item.sortRule=="0"'>
				    desc
				 </if>
				</foreach>
		  </if>
		  <if test='vo.mold =="5"'>
		   SELECT t1.*,t1.PUBLISHTIME time,t2.NICKNAME,t2.AVATAR, 1 mold,IFNULL(t3.`STATUS`,'0') likeStatus,t3.UID likeUid
		   FROM t_w_work_info t1 INNER JOIN t_a_oauth t2 on t1.UID = t2.U_ID
				and t1.UID=#{vo.uid} and t1.`STATUS`='10' and t2.OAUTH_ID=#{vo.oauthId}
				LEFT JOIN t_w_like t3 ON t1.ID= t3.TID and t3.UID=#{vo.loginUid}
		  </if>
		
    </select>
      
		  <update id="updatePvBatch" parameterType="list">
       <foreach collection="list" item="t" separator=";">
       	update t_w_work_info set pv=IFNULL(pv,0)+#{pv}  where id=#{id}     	
       </foreach>
    </update>
</mapper>
